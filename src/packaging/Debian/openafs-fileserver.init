#! /bin/sh
### BEGIN INIT INFO
# Provides:             openafs-fileserver
# Required-Start:       $remote_fs $network $time $named
# Required-Stop:        $remote_fs $network
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    OpenAFS file and database server manager
# Description:          Starts, stops, or restarts the OpenAFS bosserver,
#                       which is the process that starts and manages the
#                       OpenAFS file server or database servers depending on
#                       its configuration.
### END INIT INFO

# Author: Sam Hartman <hartmans@mit.edu>
# Author: Russ Allbery <rra@debian.org>
#
# Based on the /etc/init.d/skeleton template as found in initscripts version
# 2.86.ds1-15.

PATH=/sbin:/bin:/usr/sbin:/usr/bin
DESC="OpenAFS BOS server"
NAME=bosserver
DAEMON=/usr/sbin/bosserver
DAEMON_ARGS=""
SCRIPTNAME=/etc/init.d/openafs-fileserver

# Exit if the package is not installed and we were not given the status option.
if [ ! -x "$DAEMON" ] && [ "status" != "$1" ] ; then
    exit 0
fi

# Read configuration if it is present.
[ -r /etc/default/openafs-fileserver ] && . /etc/default/openafs-fileserver

# Get the setting of VERBOSE and other rcS variables.
[ -f /etc/default/rcS ] && . /etc/default/rcS

# Define LSB log functions (requires lsb-base >= 3.0-6).
. /lib/lsb/init-functions

# Make sure we don't leave file descriptors open.
exec 3>/dev/null
exec </dev/null

# Return
#   0 if daemon has been started
#   1 if daemon was already running
#   2 if daemon could not be started
do_start()
{
    start-stop-daemon --start --quiet --startas $DAEMON --name $NAME --test \
        > /dev/null || return 1
    start-stop-daemon --start --quiet --startas $DAEMON --name $NAME \
        -- $DAEMON_ARGS || return 2
}

# Return
#   0 if daemon has been stopped
#   1 if daemon was already stopped
#   2 if daemon could not be stopped
#   other if a failure occurred
do_stop()
{
    start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --name $NAME
}

case "$1" in 
  start)
    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
    do_start
    case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2)   [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;

  stop)
    [ "$VERBOSE" != no ] && log_action_msg "Stopping OpenAFS services"
    bos shutdown localhost -wait -localauth
    [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2)   [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;

  restart|force-reload)
    [ "$VERBOSE" != no ] && log_daemon_msg "Restarting $DESC" "$NAME"
    start-stop-daemon --start --quiet --startas $DAEMON --name $NAME --test \
        > /dev/null
    case "$?" in
      0)
        do_start
        case "$?" in
          0) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
          *) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
      1)
        bos restart localhost -all -bosserver -localauth
        case "$?" in
          0) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
          *) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
      *)
        log_end_msg 1
        ;;
    esac
    ;;

  status)
    start-stop-daemon --start --quiet --startas $DAEMON --name $NAME --test \
        > /dev/null
    case "$?" in
      0)
        echo "$NAME is not running"
        exit 3
        ;;
      1)
        echo "$NAME is running"
        exit 0
        ;;
      *)
        log_warning_msg "Cannot determine if $NAME is running"
        exit 4
        ;;
    esac
    ;;

  *)
    echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload|status}" >&2
    exit 3
    ;;
esac

exit 0
